library(kSamples)
library(glmnet)
library(ppcor)
library(R.matlab)
library(shape)
library(igraph)

SINCERITITES <- dget("SINCERITIES functions/aSINCERITIES.R")
final_ranked_predictions <- dget("SINCERITIES functions/final_ranked_predictions.R")

mat <- readMat('In silico single cell data/20_nets_10genes_8UNEVENtime_sigma01B_no_initial_points2.mat')
time <- as.vector(mat$time.points)
numGENES <- as.vector(mat$n)
window_size <- 5  # Sliding window size

all_adj_matrices <- list()
all_tables <- list()

for (start_idx in 1:(length(time) - window_size + 1)) {
  end_idx <- start_idx + window_size - 1
  
  current_time <- time[start_idx:end_idx]
  current_singleCELLdata <- lapply(mat$data.tot.array, function(example) {
    lapply(start_idx:end_idx, function(i) example[[1]][, i, ])
  })
  
  for (numEXAMPLES in 1:length(current_singleCELLdata)) {
    singleCELLdata <- current_singleCELLdata[[numEXAMPLES]]
    totDATA <- do.call(rbind, singleCELLdata)
    genes <- sprintf("Gene %d", 1:numGENES)
    
    DATA <- list(
      time = current_time,
      numGENES = numGENES,
      singleCELLdata = singleCELLdata,
      genes = genes,
      totDATA = totDATA
    )
    
    result <- SINCERITITES(DATA, distance = 7, method = 3, noDIAG = 1, SIGN = 1)
    adj_matrix <- result$adj_matrix
  
    table <- final_ranked_predictions(
      adj_matrix,
      DATA$genes,
      SIGN = 1,
      fileNAME = sprintf("results_window_%d_to_%d_network%d", start_idx, end_idx, numEXAMPLES),
      saveFile = TRUE
    )
    
    all_adj_matrices[[sprintf("%d_to_%d_network%d", start_idx, end_idx, numEXAMPLES)]] <- adj_matrix
    all_tables[[sprintf("%d_to_%d_network%d", start_idx, end_idx, numEXAMPLES)]] <- table

    filtered_data <- table[table$Edges != "no regulation", ]
    
    graph <- graph_from_data_frame(filtered_data, directed = TRUE)
  
    E(graph)$color <- ifelse(filtered_data$Edges == "activation", "green", "red")
    E(graph)$width <- abs(filtered_data$Interaction) * 5  # Scale for better visibility
   
    example_dir <- sprintf("Example_%d", numEXAMPLES)
    if (!dir.exists(example_dir)) {
      dir.create(example_dir)
    }
  
    plot_file <- sprintf("%s/Network_Window_%d_to_%d.png", example_dir, start_idx, end_idx)
    png(plot_file, width = 800, height = 800)

    plot(
      graph,
      vertex.size = 25,            
      vertex.color = "skyblue",    
      vertex.label.cex = 0.8,     
      edge.arrow.size = 0.5,       
      edge.color = E(graph)$color, 
      edge.width = E(graph)$width, 
      main = sprintf("Gene Regulatory Network - Window %d to %d, Example %d", start_idx, end_idx, numEXAMPLES)
    )
    
    dev.off()
  }
}
