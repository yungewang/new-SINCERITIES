library(igraph)
library(shape)

for (numEXAMPLES in 1:dim(mat$networks)[3]) {
  true_network <- mat$networks[,,numEXAMPLES]

  gold_activation_edges <- which(true_network > 0, arr.ind = TRUE)
  gold_repression_edges <- which(true_network < 0, arr.ind = TRUE)

  self_activation <- activation_edges[activation_edges[, 1] == activation_edges[, 2], , drop = FALSE]
  self_repression <- repression_edges[repression_edges[, 1] == repression_edges[, 2], , drop = FALSE]

  activation_edges_list <- cbind(activation_edges[, 1], activation_edges[, 2])
  repression_edges_list <- cbind(repression_edges[, 1], repression_edges[, 2])
  
  all_edges_list <- rbind(activation_edges_list, repression_edges_list)
  
  g <- graph_from_edgelist(all_edges_list, directed = TRUE)
  
  layout_coords <- layout_in_circle(g)
  
  plot(
    g,
    vertex.label = paste("Gene", 1:vcount(g)),  # Label nodes as Gene 1, Gene 2, etc.
    edge.arrow.size = 0,                       # Suppress default arrows
    edge.color = NA,                           # Hide default edges
    vertex.color = "skyblue",                  # Color for gene nodes
    vertex.size = 20,                          # Node size
    main = paste("Gene Regulatory Network - Example", numEXAMPLES),
    layout = layout_coords
  )
  
  if (nrow(activation_edges_list) > 0) {
    for (i in 1:nrow(activation_edges_list)) {
      from <- activation_edges_list[i, 1]
      to <- activation_edges_list[i, 2]
      Arrows(
        layout_coords[from, 1], layout_coords[from, 2],  
        layout_coords[to, 1], layout_coords[to, 2],     
        arr.type = "triangle", col = "green",           
        arr.width = 0.1, arr.length = 0.2           
      )
    }
  }
  
  if (nrow(repression_edges_list) > 0) {
    for (i in 1:nrow(repression_edges_list)) {
      from <- repression_edges_list[i, 1]
      to <- repression_edges_list[i, 2]
    
      x1 <- layout_coords[from, 1]
      y1 <- layout_coords[from, 2]
      x2 <- layout_coords[to, 1]
      y2 <- layout_coords[to, 2]
      
      segments(x1, y1, x2, y2, col = "red", lwd = 1.5)
      
      filledcircle(
        mid = c(x2, y2), 
        r1 = 0.03,        
        col = "red"      
      )
    }
  }
  
  if (nrow(self_activation) > 0) {
    for (i in 1:nrow(self_activation)) {
      node <- self_activation[i, 1]
      Arrows(
        layout_coords[node, 1], layout_coords[node, 2], 
        layout_coords[node, 1] + 0.1, layout_coords[node, 2] + 0.1,  
        arr.type = "triangle", col = "green", arr.width = 0.1, arr.length = 0.2
      )
    }
  }
  
  if (nrow(self_repression) > 0) {
    for (i in 1:nrow(self_repression)) {
      node <- self_repression[i, 1]
      filledcircle(
        mid = c(layout_coords[node, 1] + 0.1, layout_coords[node, 2] + 0.1), 
        r1 = 0.03,
        col = "red"
      )
    }
  }
}

