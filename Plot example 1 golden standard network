library(igraph)
library(shape)

for (numEXAMPLES in 1:dim(mat$networks)[3]) {
  true_network <- mat$networks[,,numEXAMPLES]

  gold_activation_edges <- which(true_network > 0, arr.ind = TRUE)
  gold_repression_edges <- which(true_network < 0, arr.ind = TRUE)

  g_gold <- graph_from_edgelist(
    rbind(gold_activation_edges, gold_repression_edges),
    directed = TRUE
  )
  
  layout_coords <- layout_in_circle(g_gold)
  
  plot(
    g_gold,
    layout = layout_coords,                  
    vertex.label = paste("Gene", 1:vcount(g_gold)), 
    vertex.color = "lightblue",                     
    vertex.size = 20,                               
    edge.arrow.size = 0,                           
    edge.color = NA,                               
    main = paste("Golden Standard Network - Example", numEXAMPLES)
  )
  
  if (nrow(gold_activation_edges) > 0) { 
    for (i in 1:nrow(gold_activation_edges)) {
      from <- gold_activation_edges[i, 1]
      to <- gold_activation_edges[i, 2]
      Arrows(
        layout_coords[from, 1], layout_coords[from, 2],   
        layout_coords[to, 1], layout_coords[to, 2],      
        arr.type = "triangle", col = "blue",             
        arr.width = 0.1, arr.length = 0.2               
      )
    }
  }
  
  if (nrow(gold_repression_edges) > 0) {  
    for (i in 1:nrow(gold_repression_edges)) {
      from <- gold_repression_edges[i, 1]
      to <- gold_repression_edges[i, 2]
      
      x1 <- layout_coords[from, 1]
      y1 <- layout_coords[from, 2]
      x2 <- layout_coords[to, 1]
      y2 <- layout_coords[to, 2]
      
      segments(x1, y1, x2, y2, col = "red", lwd = 2)
      
      filledcircle(
        mid = c(x2, y2),  
        r1 = 0.03,        
        col = "red"      
      )
    }
  }
}
